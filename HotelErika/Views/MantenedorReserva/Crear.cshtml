@model CapaEntidad.entReserva

@{
    ViewData["Title"] = "Crear Reserva";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background: url('https://imgs.search.brave.com/EM2kmOUPMvhOXopsjvn6dUuLxMoxkf5fJolTYdNwF0k/rs:fit:860:0:0:0/g:ce/aHR0cHM6Ly9jZW50/cm9tYWxscXVpLnBl/L3dwLWNvbnRlbnQv/dXBsb2Fkcy8yMDI0/LzA2L0N1YW50YXMt/cGxheWFzLXRpZW5l/LWxhLWNvc3RhLXBl/cnVhbmEtNzY4eDQx/MC5qcGc') no-repeat center center fixed;
        background-size: cover;
        font-family: 'Segoe UI', sans-serif;
        margin: 0;
        padding: 0;
    }

    .form-container {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 40px;
        max-width: 750px;
        margin: 80px auto;
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.25);
        animation: fadeIn 1s ease-in-out;
    }

    h2 {
        text-align: center;
        color: #2c3e50;
        font-weight: 700;
        margin-bottom: 30px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        font-weight: 600;
        margin-bottom: 5px;
        display: block;
        color: #34495e;
    }

    .form-control, .form-select {
        border-radius: 12px;
        padding: 14px;
        font-size: 1.05rem;
        width: 100%;
        border: 1px solid #ccc;
        transition: box-shadow 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            box-shadow: 0 0 8px rgba(52, 152, 219, 0.5);
            border-color: #3498db;
            outline: none;
        }

    .btn {
        border-radius: 12px;
        padding: 14px;
        font-size: 1.05rem;
        width: 48%;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .btn-primary {
        background-color: #3498db;
        border: none;
        color: white;
    }

        .btn-primary:hover {
            background-color: #2980b9;
            transform: scale(1.03);
        }

    .btn-secondary {
        background-color: #95a5a6;
        border: none;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #7f8c8d;
            transform: scale(1.03);
        }

    .button-group {
        display: flex;
        justify-content: space-between;
        margin-top: 25px;
    }

    .text-danger {
        color: #e74c3c;
        font-weight: bold;
    }

    .text-center {
        text-align: center;
    }
</style>

<div class="form-container">
    <h2>Crear Reserva</h2>

    <div class="text-danger text-center mb-3">@ViewBag.Mensaje</div>

    <form asp-action="ConfirmarReserva" method="post" autocomplete="off">
        <div class="form-group">
            <label asp-for="DNI_RUC">DNI / RUC</label>
            <input asp-for="DNI_RUC" class="form-control" readonly />
        </div>

        <div class="form-group">
            <label asp-for="Nombre"></label>
            <input asp-for="Nombre" class="form-control" readonly />
        </div>

        <div class="form-group">
            <label asp-for="Apellido"></label>
            <input asp-for="Apellido" class="form-control" readonly />
        </div>

        <div class="form-group">
            <label asp-for="TipoHabitacion"></label>
            <select asp-for="TipoHabitacion" class="form-select" asp-items="new SelectList(ViewBag.TiposHabitacion)">
                <option value="">-- Selecciona tipo --</option>
            </select>
            <span asp-validation-for="TipoHabitacion" class="text-danger"></span>
        </div>

        <!-- Número de Habitación -->
        <div class="form-group">
            <label asp-for="NumeroHabitacion"></label>
            <select asp-for="NumeroHabitacion" class="form-select" id="habitacionSelect">
                <option value="">-- Selecciona habitación --</option>
                @if (ViewBag.Habitaciones != null)
                {
                    foreach (var h in ViewBag.Habitaciones)
                    {
                        <option value="@h.NumeroHabitacion">@h.NumeroHabitacion</option>
                    }
                }
            </select>
            <span asp-validation-for="NumeroHabitacion" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Precio"></label>
            <input asp-for="Precio" class="form-control" readonly id="precioInput" />
        </div>

        <div class="form-group">
            <label asp-for="FechaEntrada"></label>
            <input asp-for="FechaEntrada" type="date" class="form-control" />
            <span asp-validation-for="FechaEntrada" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="FechaSalida"></label>
            <input asp-for="FechaSalida" type="date" class="form-control" />
            <span asp-validation-for="FechaSalida" class="text-danger"></span>
        </div>

        <div class="button-group">
            <button type="submit" class="btn btn-primary">Guardar</button>
            <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const habitacionSelect = document.getElementById("habitacionSelect");
            const precioInput = document.getElementById("precioInput");

            if (habitacionSelect) {
                habitacionSelect.addEventListener("change", function () {
                    const numero = habitacionSelect.value;

                    if (numero) {
                        fetch(`/MantenedorReserva/ObtenerPrecio?numero=${numero}`)
                            .then(response => response.json())
                            .then(precio => {
                                precioInput.value = parseFloat(precio).toFixed(2);
                            })
                            .catch(error => {
                                console.error("Error al obtener precio:", error);
                                precioInput.value = "";
                            });
                    } else {
                        precioInput.value = "";
                    }
                });
            }
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tipoSelect = document.querySelector('[name="TipoHabitacion"]');
            const habitacionSelect = document.getElementById("habitacionSelect");

            if (tipoSelect) {
                tipoSelect.addEventListener("change", function () {
                    const tipo = tipoSelect.value;
                    habitacionSelect.innerHTML = '<option value="">-- Selecciona habitación --</option>';

                    if (tipo) {
                        fetch(`/MantenedorReserva/ObtenerHabitaciones?tipo=${tipo}`)
                            .then(response => response.json())
                            .then(data => {
                                data.forEach(h => {
                                    const opt = document.createElement("option");
                                    opt.value = h.numeroHabitacion;
                                    opt.textContent = h.numeroHabitacion;
                                    habitacionSelect.appendChild(opt);
                                });
                            })
                            .catch(error => {
                                console.error("Error al obtener habitaciones:", error);
                            });
                    }
                });
            }
        });
    </script>
}
